#!/usr/bin/env python3
#

#
# Licensed to the Apache Software Foundation (ASF) undeugr one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

import json
import socket
import sys


def print_usage(cmd):
    print(f"Usage: {cmd} led on|off [host:port]")
    return 1;

def main(argv):
    if len(argv) < 3 or len(argv) > 4:
        return print_usage(argv[0])

    if argv[1].upper() != "LED":
        return print_usage(argv[0])

    new_value = argv[2].upper()
    if new_value not in ["ON", "OFF"]:
        return print_usage(argv[0])

    if len(argv) == 4:
        try:
            host, port = argv[3].split(':')
            addr = (host, int(port))
        except:
            return print_usage(argv[0])
    else:
        addr = ("127.0.0.1", 8888)

    print("Connecting to %s:%s" % addr)
    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client.connect(addr)

    data = json.dumps({'weatherbee': {'led': new_value}}).encode()
    client.sendall(b"PUT /weatherbee/led HTTP/1.0\r\n")
    client.sendall(b"Content-Type: application/json\r\n")
    cl = "Content-Length: %s\r\n" % (len(data) + 2)
    client.sendall(cl.encode())
    client.sendall(b"\r\n")
    print(f"Sending {data}")
    client.sendall(data)
    client.sendall(b'\r\n')
    print(f"data sent")

    while True:
        data = client.recv(4096)
        if data == b'':
            break;
        print(f"READ: {data.decode()}")

    client.close()

if __name__ == "__main__":
    sys.exit(main(sys.argv))
